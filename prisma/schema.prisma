generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TipoEndereco {
  COMERCIAL
  RESIDENCIAL
}

model Aluno {
  id           Int          @id @default(autoincrement())
  nome         String       @db.VarChar(255)
  email        String       @unique @db.VarChar(255)
  senhaHash    String       @db.VarChar(255)
  cursoId      Int
  curso        Curso        @relation(fields: [cursoId], references: [id])
  endereco     Endereco?    @relation("EnderecoAluno")
  turmas       AlunoTurma[]
  permissoes   AlunoPermissao[] // ⬅ RELAÇÃO N:N

  criadoEm     DateTime     @default(now()) @db.Timestamp(0)
  atualizadoEm DateTime     @updatedAt @db.Timestamp(0)
}

model Professor {
  id           Int                  @id @default(autoincrement())
  nome         String               @db.VarChar(255)
  email        String               @unique @db.VarChar(255)
  turmas       Turma[]
  disciplinas  ProfessorDisciplina[]
  endereco Endereco? @relation("EnderecoProfessor")


  criadoEm     DateTime             @default(now()) @db.Timestamp(0)
  atualizadoEm DateTime             @updatedAt @db.Timestamp(0)
}

model Curso {
  id             Int           @id @default(autoincrement())
  nome           String        @unique @db.VarChar(255)
  universidadeId Int
  universidade   Universidade  @relation(fields: [universidadeId], references: [id])
  alunos         Aluno[]
  disciplinas    Disciplina[]
  turmas         Turma[]

  criadoEm       DateTime      @default(now()) @db.Timestamp(0)
  atualizadoEm   DateTime      @updatedAt @db.Timestamp(0)
}

model Universidade {
  id             Int           @id @default(autoincrement())
  nome           String        @db.VarChar(255)
  cnpj           String        @unique @db.VarChar(18)
  cursos         Curso[]
  enderecos      Endereco[]    @relation("EnderecoUniversidade")

  criadoEm       DateTime      @default(now()) @db.Timestamp(0)
  atualizadoEm   DateTime      @updatedAt @db.Timestamp(0)
}

model Endereco {
  id              Int           @id @default(autoincrement())
  logradouro      String        @db.VarChar(255)
  numero          String        @db.VarChar(10)
  complemento     String?       @db.VarChar(255)
  bairro          String        @db.VarChar(255)
  cidade          String        @db.VarChar(255)
  estado          String        @db.VarChar(2)
  cep             String        @db.VarChar(20)
  pais            String        @default("Brasil") @db.VarChar(100)
  tipo            TipoEndereco

  universidadeId  Int?
  universidade    Universidade? @relation("EnderecoUniversidade", fields: [universidadeId], references: [id])

  alunoId         Int?          @unique
  aluno           Aluno?        @relation("EnderecoAluno", fields: [alunoId], references: [id])

  professorId Int?  @unique
  professor   Professor? @relation("EnderecoProfessor", fields: [professorId], references: [id])

  dataCriacao     DateTime      @default(now()) @db.Timestamp(0)
  dataAtualizacao DateTime      @default(now()) @db.Timestamp(0)
}

model Disciplina {
  id             Int                   @id @default(autoincrement())
  nome           String                @db.VarChar(255)
  cursoId        Int
  curso          Curso                 @relation(fields: [cursoId], references: [id])
  turmas         Turma[]
  professores    ProfessorDisciplina[]

  criadoEm       DateTime              @default(now()) @db.Timestamp(0)
  atualizadoEm   DateTime              @updatedAt @db.Timestamp(0)
}

model Turma {
  id             Int           @id @default(autoincrement())
  nome           String        @db.VarChar(255)
  cursoId        Int
  professorId    Int
  disciplinaId   Int?

  curso          Curso         @relation(fields: [cursoId], references: [id])
  professor      Professor     @relation(fields: [professorId], references: [id])
  disciplina     Disciplina?   @relation(fields: [disciplinaId], references: [id])
  alunos         AlunoTurma[]

  criadoEm       DateTime      @default(now()) @db.Timestamp(0)
  atualizadoEm   DateTime      @updatedAt @db.Timestamp(0)
}

model AlunoTurma {
  alunoId Int
  turmaId Int

  aluno   Aluno @relation(fields: [alunoId], references: [id])
  turma   Turma @relation(fields: [turmaId], references: [id])

  @@id([alunoId, turmaId])
}

model ProfessorDisciplina {
  professorId  Int
  disciplinaId Int

  professor    Professor  @relation(fields: [professorId], references: [id])
  disciplina   Disciplina @relation(fields: [disciplinaId], references: [id])

  @@id([professorId, disciplinaId])
}

model Permissao {
  id         Int              @id @default(autoincrement())
  nome       String           @unique @db.VarChar(50)
  alunos     AlunoPermissao[]

  criadoEm   DateTime         @default(now()) @db.Timestamp(0)
  atualizadoEm DateTime       @updatedAt @db.Timestamp(0)
}
model AlunoPermissao {
  alunoId     Int
  permissaoId Int

  aluno       Aluno     @relation(fields: [alunoId], references: [id])
  permissao   Permissao @relation(fields: [permissaoId], references: [id])

  @@id([alunoId, permissaoId])
}

